# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  buildProjects: '**/*.csproj'
  testProjects: '**/*Tests/*.csproj'
  webProjects: '**/*Web/*.csproj'
  NUGET_PACKAGES: $(Pipeline.Workspace)/.nuget/packages
  NUGET_CACHE: nuget | **/package-lock.json


steps:
- task: CacheBeta@0
  displayName: Cache NuGet packages
  inputs:
    key: $(NUGET_CACHE)
    path: $(NUGET_PACKAGES)
  
- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: 'restore'
    projects: '$(buildProjects)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    command: 'build'
    projects: '$(buildProjects)'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test'
  inputs:
    command: 'test'
    projects: '$(testProjects)'
    arguments: '--collect "Code coverage"'

- task: DotNetCoreCLI@2
  displayName: 'dotnet publish'
  inputs:
    command: 'publish'
    projects: '$(webProjects)'
    publishWebProjects: True
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
    artifactName: 'drop'
